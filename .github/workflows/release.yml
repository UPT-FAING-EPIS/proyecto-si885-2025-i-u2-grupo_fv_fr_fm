name: Create Release

on:
  push:
    tags:
      - 'v*' 

permissions: 
  contents: write

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Get Release Version from Tag
        id: get_version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release Notes (Optional - Placeholder)
        id: create_release_notes
        run: |
          echo "## Release Notes for ${{ env.RELEASE_VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "Esta es la versión ${{ env.RELEASE_VERSION }} de la Plataforma de Análisis del Mercado Laboral Tecnológico." >> release_notes.md
          echo "" >> release_notes.md
          echo "Cambios principales:" >> release_notes.md
          echo "- (Añade aquí los cambios importantes de esta versión)" >> release_notes.md

      - name: Zip Release Assets
        run: |
          mkdir release_package
          echo "Copiando archivos del release..."
          if [ -f Programa/app_limpieza_ofertas.py ]; then
            cp Programa/app_limpieza_ofertas.py release_package/
            echo "Copiado: Programa/app_limpieza_ofertas.py"
          else
            echo "ADVERTENCIA: Programa/app_limpieza_ofertas.py no encontrado."
          fi
          
          if [ -f Programa/requirements.txt ]; then
            cp Programa/requirements.txt release_package/
            echo "Copiado: Programa/requirements.txt"
          else
            echo "ADVERTENCIA: Programa/requirements.txt no encontrado."
          fi
          
          # La línea para copiar README.md ha sido eliminada.
          
          # Aquí puedes añadir más archivos si los necesitas en tu release, ajustando sus rutas.
          # Ejemplo si tuvieras un archivo SQL en una carpeta 'sql_scripts':
          # if [ -f sql_scripts/vistas_athena.sql ]; then cp sql_scripts/vistas_athena.sql release_package/; fi

          echo "Creando archivo ZIP..."
          zip -r release_v${{ env.RELEASE_VERSION }}.zip release_package/
          echo "Archivo ZIP creado: release_v${{ env.RELEASE_VERSION }}.zip"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }} 
          release_name: Release ${{ env.RELEASE_VERSION }}
          body_path: release_notes.md 
          draft: false
          prerelease: false 

      - name: Upload Release Asset (ZIP)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./release_v${{ env.RELEASE_VERSION }}.zip 
          asset_name: plataforma_analisis_laboral_v${{ env.RELEASE_VERSION }}.zip 
          asset_content_type: application/zip